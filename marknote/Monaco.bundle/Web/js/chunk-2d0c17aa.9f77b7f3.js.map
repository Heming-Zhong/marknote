{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-smali.js"],"names":[],"mappings":";;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA,oEAAoE,EAAE;AACtE;AACA,EAAE;;AAEF;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,kBAAkB;AAClB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,oBAAoB,IAAI;AACxB","file":"js/chunk-2d0c17aa.9f77b7f3.js","sourcesContent":["// Test files for the parser itself:\n// https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n\nPrism.languages.smali = {\n\t'comment': /#.*/,\n\t'string': {\n\t\tpattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n\t\tgreedy: true\n\t},\n\n\t'class-name': {\n\t\tpattern: /L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n\t\tinside: {\n\t\t\t'class-name': {\n\t\t\t\tpattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'namespace': {\n\t\t\t\tpattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\//\n\t\t\t\t}\n\t\t\t},\n\t\t\t'builtin': /^L/\n\t\t}\n\t},\n\t'builtin': [\n\t\t{\n\t\t\t// Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n\t\t\tpattern: /([();\\[])[BCDFIJSVZ]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// e.g. .field mWifiOnUid:I\n\t\t\tpattern: /([\\w$>]:)[BCDFIJSVZ]/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /(\\.end\\s+)[\\w-]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'function': {\n\t\tpattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n\t\tlookbehind: true\n\t},\n\n\t'field': {\n\t\tpattern: /[\\w$]+(?=:)/,\n\t\talias: 'variable'\n\t},\n\t'register': {\n\t\tpattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n\t\tlookbehind: true,\n\t\talias: 'variable'\n\t},\n\n\t'boolean': {\n\t\tpattern: /(^|[^\\w.-])(?:true|false)(?![\\w.-])/,\n\t\tlookbehind: true\n\t},\n\t'number': {\n\t\tpattern: /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n\t\tlookbehind: true\n\t},\n\n\t'label': {\n\t\tpattern: /(:)\\w+/,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n\n\t'operator': /->|\\.\\.|[\\[=]/,\n\t'punctuation': /[{}(),;:]/\n};\n"],"sourceRoot":""}